-- =====================================================================
-- üîß CORRE√á√ÉO: Semanas na compara√ß√£o e verifica√ß√£o UTR
-- =====================================================================

-- PROBLEMA 1: Compara√ß√£o mostrando semanas 1-40 (mas dados come√ßam na 22)
-- SOLU√á√ÉO: Corrigir listar_todas_semanas para retornar apenas semanas com dados

DROP FUNCTION IF EXISTS public.listar_todas_semanas() CASCADE;

CREATE OR REPLACE FUNCTION public.listar_todas_semanas()
RETURNS integer[]
LANGUAGE sql
STABLE
SECURITY DEFINER
AS $$
  SELECT ARRAY_AGG(DISTINCT semana_numero ORDER BY semana_numero)
  FROM public.dados_corridas
  WHERE semana_numero IS NOT NULL;
$$;

GRANT EXECUTE ON FUNCTION public.listar_todas_semanas() TO anon, authenticated;

-- PROBLEMA 2: UTR s√≥ mostrando geral
-- VERIFICA√á√ÉO: Testar se o backend est√° retornando os dados corretamente

SELECT '1Ô∏è‚É£ TESTANDO calcular_utr para GUARULHOS S35' as info;
SELECT public.calcular_utr(NULL, 35, 'GUARULHOS', NULL, NULL) as resultado_utr;

-- Ver estrutura do JSON retornado
SELECT '2Ô∏è‚É£ ESTRUTURA DO JSON RETORNADO' as info;
SELECT 
  jsonb_typeof(public.calcular_utr(NULL, 35, 'GUARULHOS', NULL, NULL)) as tipo_raiz,
  jsonb_object_keys(public.calcular_utr(NULL, 35, 'GUARULHOS', NULL, NULL)) as chaves_json;

-- Ver se sub_praca est√° presente e tem dados
SELECT '3Ô∏è‚É£ VERIFICANDO sub_praca NO RESULTADO' as info;
SELECT 
  (public.calcular_utr(NULL, 35, 'GUARULHOS', NULL, NULL)->'sub_praca') as dados_sub_praca,
  jsonb_array_length((public.calcular_utr(NULL, 35, 'GUARULHOS', NULL, NULL)->'sub_praca')) as quantidade_sub_pracas;

-- Ver se origem est√° presente e tem dados
SELECT '4Ô∏è‚É£ VERIFICANDO origem NO RESULTADO' as info;
SELECT 
  jsonb_array_length((public.calcular_utr(NULL, 35, 'GUARULHOS', NULL, NULL)->'origem')) as quantidade_origens;

-- Ver se turno est√° presente e tem dados
SELECT '5Ô∏è‚É£ VERIFICANDO turno NO RESULTADO' as info;
SELECT 
  jsonb_array_length((public.calcular_utr(NULL, 35, 'GUARULHOS', NULL, NULL)->'turno')) as quantidade_turnos;

SELECT '‚úÖ TESTES CONCLU√çDOS' as status;
SELECT 'Se as quantidades s√£o > 0, o problema est√° no frontend (mapeamento)' as diagnostico;
SELECT 'Se as quantidades s√£o 0, o problema est√° no backend (query)' as diagnostico;

